Step 0: Terraform init
[0m[1mInitializing the backend...[0m
[0m[1mInit[WARNING]: Ansible is being run in a world writable directory (/mnt/e/Summer
Internship 2025/AutoKube/ansible), ignoring it as an ansible.cfg source. For
more information see
https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-
world-writable-dir
[WARNING]: Found both group and host with same name: nfs
[WARNING]: Ansible is being run in a world writable directory (/mnt/e/Summer
Internship 2025/AutoKube/ansible), ignoring it as an ansible.cfg source. For
more information see
https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-
world-writable-dir
[WARNING]: Found both group and host with same name: nfs
 [ERROR]: User interrupted execution
Running Terraform and Ansible deployment...
reshing state... [id=pve/qemu/300][0m
[0m[1mproxmox_vm_qemu.k8s_workers["worker-1"]: Refreshing state... [id=pve/qemu/400][0m
[0m[1mproxmox_vm_qemu.nfs_server: Refreshing state... [id=pve/qemu/200][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mall_vm_ips = {
  "master-1" = "192.168.1.173"
  "nfs_server" = "192.168.1.172"
  "worker-1" = "192.168.1.174"
}
worker_count = 1
workers_ips = {
  "worker-1" = "192.168.1.174"
}
Done with Terraform apply.
Waiting 60 seconds for VMs to finish booting...
Step 2: Run Ansible k8s-setup.yml

PLAY [Prepare and install Kubernetes] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Ensure systemd-resolved config directory exists] ************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Disable swap] ***********************************************
changed: [worker-1]
changed: [master-1]

TASK [k8s_common : Load required kernel modules] *******************************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Apply kernel modules] ***************************************
changed: [master-1]
changed: [worker-1]

TASK [k8s_common : Set sysctl params] ******************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Apply sysctl settings] **************************************
changed: [master-1]
changed: [worker-1]

TASK [k8s_common : Add Kubernetes GPG key] *************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Add Kubernetes apt repository] ******************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Install prerequisites] **************************************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Create CRI-O keyring directory] *****************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Add CRI-O apt key] ******************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Add CRI-O repo] *********************************************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Install CRI-O] **********************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Enable and start CRI-O service] *****************************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Add Kubernetes apt key] *************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Add Kubernetes repo] ****************************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Install kubelet, kubeadm, kubectl] **************************
ok: [master-1]
ok: [worker-1]

TASK [k8s_common : Install jq (optional but used in scripts)] ******************
ok: [worker-1]
ok: [master-1]

TASK [k8s_common : Hold kube packages] *****************************************
changed: [worker-1] => (item=kubelet)
changed: [master-1] => (item=kubelet)
changed: [master-1] => (item=kubeadm)
changed: [worker-1] => (item=kubeadm)
changed: [master-1] => (item=kubectl)
changed: [worker-1] => (item=kubectl)
changed: [master-1] => (item=cri-o)
changed: [worker-1] => (item=cri-o)

PLAY [Initialize master] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [master-1]

TASK [k8s_master : Stop kubelet service] ***************************************
changed: [master-1]

TASK [k8s_master : Kill kube-apiserver and other Kubernetes control plane processes] ***
changed: [master-1]

TASK [k8s_master : Stop container runtime (crio)] ******************************
changed: [master-1]

TASK [k8s_master : Reset any previous kubeadm state (cleanup)] *****************
changed: [master-1]

TASK [k8s_master : Remove kube manifests (if any)] *****************************
ok: [master-1] => (item=/etc/kubernetes/manifests/kube-apiserver.yaml)
ok: [master-1] => (item=/etc/kubernetes/manifests/kube-controller-manager.yaml)
ok: [master-1] => (item=/etc/kubernetes/manifests/kube-scheduler.yaml)
ok: [master-1] => (item=/etc/kubernetes/manifests/etcd.yaml)

TASK [k8s_master : Remove etcd data directory] *********************************
changed: [master-1]

TASK [k8s_master : Kill process using port 10257] ******************************
changed: [master-1]

TASK [k8s_master : Enable and start crio] **************************************
changed: [master-1]

TASK [k8s_master : Enable and start kubelet] ***********************************
changed: [master-1]

TASK [k8s_master : Initialize Kubernetes master] *******************************
changed: [master-1]

TASK [k8s_master : Create .kube directory] *************************************
ok: [master-1]

TASK [k8s_master : Copy admin.conf] ********************************************
changed: [master-1]

TASK [k8s_master : Install Flannel CNI] ****************************************
changed: [master-1]

TASK [k8s_master : Extract join command] ***************************************
changed: [master-1]

TASK [k8s_master : Save join command to file] **********************************
changed: [master-1]

PLAY [Join worker nodes] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [worker-1]

TASK [k8s_worker : Reset Kubernetes on worker node] ****************************
changed: [worker-1]

TASK [k8s_worker : Clean leftover Kubernetes files] ****************************
changed: [worker-1] => (item=/etc/kubernetes/pki)
ok: [worker-1] => (item=/etc/kubernetes/kubelet.conf)
ok: [worker-1] => (item=/etc/kubernetes/manifests)

TASK [k8s_worker : Ensure master host variable exists] *************************
ok: [worker-1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [k8s_worker : Fetch join command from master (slurp)] *********************
ok: [worker-1 -> master-1(192.168.1.173)]

TASK [k8s_worker : Decode and save join command] *******************************
changed: [worker-1]

TASK [k8s_worker : Run join command] *******************************************
changed: [worker-1]

TASK [k8s_worker : Wait for cluster setup to complete] *************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[k8s_worker : Wait for cluster setup to complete]
Waiting 60 seconds for cluster setup:
ok: [worker-1]

PLAY [Deploy metrics-server] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [master-1]

TASK [metrics_server : Deploy metrics-server] **********************************
changed: [master-1]

TASK [metrics_server : Patch metrics-server deployment to allow insecure TLS] ***
changed: [master-1]

TASK [metrics_server : Wait for metrics-server to be ready] ********************
changed: [master-1]

PLAY RECAP *********************************************************************
master-1                   : ok=40   changed=20   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker-1                   : ok=28   changed=8    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Done with k8s-setup.yml.
Step 3: Run Ansible helm_monitoring.yml

PLAY [Deploy Prometheus & Grafana using Helm] **********************************

TASK [Gathering Facts] *********************************************************
ok: [master-1]

TASK [monitoring : Ensure helm is installed] ***********************************
fatal: [master-1]: FAILED! => {"changed": false, "cmd": "helm version", "failed_when_result": true, "msg": "[Errno 2] No such file or directory: b'helm'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
...ignoring

TASK [monitoring : Install helm (if not installed)] ****************************
changed: [master-1]

TASK [monitoring : Ensure pip3 is installed] ***********************************
changed: [master-1]

TASK [monitoring : Install Python Kubernetes client] ***************************
changed: [master-1]

TASK [monitoring : Create monitoring namespace] ********************************
changed: [master-1]

TASK [monitoring : Add prometheus-community helm repo] *************************
changed: [master-1]

TASK [monitoring : Update helm repo] *******************************************
changed: [master-1]

TASK [monitoring : Copy values.yaml to k8s-master-1] ***************************
changed: [master-1]

TASK [monitoring : Deploy kube-prometheus-stack via Helm (command workaround)] ***
