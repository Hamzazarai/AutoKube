- name: Ensure helm is installed
  command: helm version
  register: helm_installed
  failed_when: helm_installed.rc != 0 and 'version.BuildInfo' not in helm_installed.stdout
  ignore_errors: true

- name: Install helm (if not installed)
  shell: |
    curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  when: helm_installed.rc != 0

- name: Ensure pip3 is installed
  apt:
    name: python3-pip
    state: present
    update_cache: yes
  become: true

- name: Install Python Kubernetes client
  pip:
    name: kubernetes
    state: present
  become: true

- name: Create monitoring namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: monitoring
    state: present
    kubeconfig: /etc/kubernetes/admin.conf

- name: Add prometheus-community helm repo
  command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  args:
    creates: /root/.cache/helm/repository/prometheus-community-index.yaml

- name: Update helm repo
  command: helm repo update

- name: Copy values.yaml to k8s-master-1
  copy:
    src: "{{ role_path }}/files/values.yaml"
    dest: /tmp/values.yaml

- name: Deploy kube-prometheus-stack via Helm (command workaround)
  command: >
    helm upgrade -i prometheus-stack prometheus-community/kube-prometheus-stack
    --namespace monitoring
    --create-namespace
    --reset-values
    --wait
    --timeout 1200s
    --values /tmp/values.yaml
    --kubeconfig /etc/kubernetes/admin.conf








